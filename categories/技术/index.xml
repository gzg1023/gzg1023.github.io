<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 沽默清尘</title>
    <link>/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 沽默清尘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2019-2021   gzg1023</copyright>
    <lastBuildDate>Sat, 24 Apr 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vue.js(2.x)原理 - new Vue流程梳理 及源码版生命周期分析「02」</title>
      <link>/posts/2021/vue_principle_02/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/vue_principle_02/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在实现完成 mini vue 以后，对深入源码分析。本篇文章来理一理从 new Vue 开始都执行了哪些操作，并且基于源码对生命周期进行更深入的理解。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>【原理探索】vue.js(2.x)框架底层原理- 实现mini vue「01」</title>
      <link>/posts/2021/vue_principle_01/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/vue_principle_01/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;响应式思想，可以理解为自动回复消息，我发送消息给你，你会返回给我相应的回复。vue 通过响应式设计让数据得到自动的控制也就产生了 MVVM 的思想，从而实现数据双向绑定。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>【原理探索】vue.js超级全家桶--原理分析及技术学习清单</title>
      <link>/posts/2021/vue_principle_main/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/vue_principle_main/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;vue.js在2016年爆🔥，到现在在中国已经是非常主流的前端框架，使用框架已经2年时间从本文开始，啃源码，解析原理，学习超级全家桶。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>【技术分享】virtual DOM的思考及snabbdom库源码解读</title>
      <link>/posts/2021/snabbdom_source/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/snabbdom_source/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;virtual DOM的广泛运用革新了技术框架，带来了更多的可能。本文了解virtual DOM的本质及对snabbdom库的源码进行分析。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>【技术分享】产品要在输入框输入高亮文字！？除了使用MD解析器，自己来模拟一个文本输入框</title>
      <link>/posts/2021/input_html/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/input_html/</guid>
      <description>&lt;p&gt;需求是这样的，运营需要在输入框输入高亮的文本用来表示一个动态的文本（如用户名），后端去匹配相应动态的内容用来给客户端推送动态内容。(本文基于vue，原理通用)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【技术分享】观察者模式VS发布/订阅模式</title>
      <link>/posts/2021/designpatterns/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/designpatterns/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在vue中，观察者模式和发布/订阅模式被用到了方方面面，在刚开始了解时候感觉这两者总是分不清楚，本文对两者来个区分。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>