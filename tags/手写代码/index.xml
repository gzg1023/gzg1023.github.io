<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>手写代码 on 沽默清尘</title>
    <link>/tags/%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81/</link>
    <description>Recent content in 手写代码 on 沽默清尘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2019-2021   gzg1023</copyright>
    <lastBuildDate>Thu, 03 Jun 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【技术分享】手写一个A&#43;规范的完整版Promise，让异步处理更流畅</title>
      <link>/posts/2021/promise/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/2021/promise/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Promise 作为 ES6 系列的新特性，无疑是前端开发的重中之重。在 2021 年的现在无论是开源项目还是业务代码到处是 Promise 的身影。本文基于 A+规范重写一个 Promise 及其静态方法的完整版，加深自己对异步代码的理解。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>